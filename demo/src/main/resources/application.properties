# spring.application.name=demo

# MySQL local

# railway only!!
spring.datasource.url=jdbc:mysql://mysql.railway.internal:3306/railway?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#spring.datasource.url=jdbc:mysql://db:3306/talks
spring.datasource.username=${MYSQLUSER}
spring.datasource.password=${MYSQLPASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ??mysql?????
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.initialization-mode=always
spring.datasource.hikari.maxLifetime=600000
spring.datasource.hikari.idleTimeout=30000

spring.security.user.name=tina
spring.security.user.password=wang

# MyBatis config
mybatis.mapper-locations=classpath:dao/*.xml
mybatis.type-aliases-package=com.talks.demo.articleDao.pojo

# ????????
mybatis.configuration.map-underscore-to-camel-case=true

#spring.data.redis.host=my-redis
spring.data.redis.host=redis.railway.internal
spring.data.redis.port=6379
spring.data.redis.password=irVwzcWZlDjwKfzfHpuEOfQknYGoZEip
spring.data.redis.ssl.enabled=false
# Redis
logging.level.org.springframework.data.redis=DEBUG

#??Railway?PORT????
server.address=0.0.0.0
server.port=${PORT:8080}

logging.level.root=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.com.talks.demo=DEBUG

jwt.secret=${JWT_SECRET}

# aws and my-redis secret in .env
# AWS ????
cloud.aws.credentials.accessKey=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secretKey=${AWS_SECRET_ACCESS_KEY}
cloud.aws.region.static=${AWS_REGION}
aws.s3.bucket=${AWS_S3_BUCKET}

# Stripe
stripe.secretKey = ${STRIPE_SECRET_KEY}